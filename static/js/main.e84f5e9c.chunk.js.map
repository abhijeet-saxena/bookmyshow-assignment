{"version":3,"sources":["assets/main-logo.png","components/assignment-1.js","components/assignment-2.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Assignment1","state","existingArray","finalArray","duplicatesArray","userValues","filterRange","userInput","document","getElementById","value","trim","split","_this","setState","forEach","element","indexOf","Number","addToFinalArray","addToDuplicatesArray","lowerLimit","upperLimit","i","allowNumerals","event","test","key","preventDefault","elemenToAdd","push","react_default","a","createElement","className","react_router_dom","to","type","name","id","onKeyPress","this","onClick","length","join","concat","Object","toConsumableArray","React","Component","Assignment2","componentDidMount","console","log","fetch","then","res","json","data","err","src","logo","height","width","alt","Home","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e84f5e9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-logo.dfe0d73a.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Assignment1 extends React.Component {\n  state = {\n    existingArray: [7000, 7001, 7002, 7003, 7004, 7005],\n    finalArray: [],\n    duplicatesArray: [],\n    userValues: []\n  };\n\n  filterRange = () => {\n    let userInput = document.getElementById(\"range\").value.trim();\n    let finalArray = [];\n    let duplicatesArray = [];\n\n    if (userInput !== \"\") {\n      let userValues = userInput.split(\",\");\n      this.setState({\n        userValues: userInput.split(\",\")\n      });\n      userValues.forEach(element => {\n        if (element.indexOf(\"-\") === -1) {\n          if (this.state.existingArray.indexOf(Number(element)) === -1)\n            this.addToFinalArray(finalArray, Number(element));\n          else this.addToDuplicatesArray(duplicatesArray, Number(element));\n        } else {\n          let lowerLimit = element.split(\"-\")[0];\n          let upperLimit = element.split(\"-\")[1];\n          for (let i = lowerLimit; i <= upperLimit; i++) {\n            if (this.state.existingArray.indexOf(Number(i)) === -1) {\n              this.addToFinalArray(finalArray, Number(i));\n            } else {\n              this.addToDuplicatesArray(duplicatesArray, Number(i));\n            }\n          }\n        }\n      });\n      this.setState({ finalArray, duplicatesArray });\n    }\n  };\n\n  allowNumerals = event => {\n    var regex = /[0-9,\\s-]/;\n    if (!regex.test(event.key)) event.preventDefault();\n  };\n\n  addToFinalArray = (finalArray, elemenToAdd) => {\n    if (finalArray.indexOf(elemenToAdd) === -1) finalArray.push(elemenToAdd);\n  };\n\n  addToDuplicatesArray = (duplicatesArray, elemenToAdd) => {\n    if (duplicatesArray.indexOf(elemenToAdd) === -1)\n      duplicatesArray.push(elemenToAdd);\n  };\n\n  render() {\n    return (\n      <div className=\"container-1\">\n        <nav className=\"nav-1\">\n          <Link to=\"/\" className=\"nav-link\">\n            {\" \"}\n            <span>&#8592;</span> Go Back\n          </Link>\n        </nav>\n        <main>\n          <div className=\"card\">\n            <h3> Problem Statement</h3>\n            <p>\n              Create a text input that accepts single, multiple and even a range\n              of numbers and matches the entered numbers with an already\n              existing array and shows the duplicates, if any, and the final\n              list of unique numbers.\n            </p>\n            <p>Eg inputs -> 7000, 6000, 8000-8005.</p>\n            <p>\n              If a range is entered, or multiple ranges are entered, all the\n              numbers falling between that range/those ranges have to be\n              considered, matched and displayed.\n            </p>\n            <p>\n              So to sum it up, if I have an existing array of\n              [7000,7001,7002,7003,7004,7005] in the script and in the text\n              input I enter 6998-7003, I should be notified that 7000, 7001,\n              7002, 7003 are duplicates and will be skipped, with the final list\n              of new additions (2 in this case).\n            </p>\n          </div>\n\n          <div className=\"solution\">\n            <input\n              type=\"text\"\n              name=\"range\"\n              id=\"range\"\n              onKeyPress={this.allowNumerals}\n            />\n            <button onClick={this.filterRange}>Filter</button>\n\n            {/* <div>User Entered Values: {this.state.userValues.join(\", \")} </div> */}\n\n            {this.state.userValues.length > 0 && (\n              <div>Existing Values: {this.state.existingArray.join(\", \")}</div>\n            )}\n\n            {this.state.userValues.length > 0 && (\n              <div>\n                Newly added Values:{\" \"}\n                {this.state.finalArray.length > 0\n                  ? this.state.finalArray.join(\", \")\n                  : \"No Unique Values found\"}{\" \"}\n              </div>\n            )}\n\n            {this.state.userValues.length > 0 && (\n              <div>\n                Duplicate Values:{\" \"}\n                {this.state.duplicatesArray.length > 0\n                  ? this.state.duplicatesArray.join(\", \")\n                  : \"No Duplicate Values found\"}\n              </div>\n            )}\n\n            {this.state.userValues.length > 0 && (\n              <div>\n                Final Unique Values:{\" \"}\n                {this.state.finalArray.length > 0\n                  ? [...this.state.existingArray, this.state.finalArray].join(\n                      \", \"\n                    )\n                  : \"No Unique Values found\"}{\" \"}\n              </div>\n            )}\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Assignment1;\n","import React from \"react\";\nimport logo from \"../assets/main-logo.png\";\n\nclass Assignment2 extends React.Component {\n  state = {};\n\n  componentDidMount = () => {\n    console.log(1);\n    fetch(\"https://in.bookmyshow.com/serv/getData?cmd=GETTRAILERS&mtype=cs\")\n      .then(res => res.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"container-2\">\n        <nav>\n          <img src={logo} height=\"40px\" width=\"150px\" alt=\"logo\" />\n          <div className=\"nav-left\">\n            <button className=\"green-btn\">COMING SOON</button>\n            <button className=\"gray-btn\">NOW SHOWING</button>\n          </div>\n          <div className=\"nav-right\">\n            <button>\n              Popular <i className=\"fas fa-chevron-down\" />\n            </button>\n            <button>\n              English <i className=\"fas fa-chevron-down\" />\n            </button>\n            <button>\n              All Genres <i className=\"fas fa-chevron-down\" />\n            </button>\n          </div>\n          <i className=\"fas fa-times\" />\n        </nav>\n        <main>This will be main content</main>\n      </div>\n    );\n  }\n}\n\nexport default Assignment2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div>\n      <ul>\n        <li>\n          <Link to=\"/assignment-1\">Go to Assignment 1</Link>\n        </li>\n        <li>\n          <Link to=\"/assignment-2\">Go to Assignment 2</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Assignment1 from \"./components/assignment-1\";\nimport Assignment2 from \"./components/assignment-2\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/home\" exact component={Home} />\n        <Route path=\"/assignment-1\" exact component={Assignment1} />\n        <Route path=\"/assignment-2\" exact component={Assignment2} />\n        <Route component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}